{"version":3,"file":"static/js/414.18a6dc3f.chunk.js","mappings":"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","sources":["../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js","../node_modules/@Green-Dot-Corporation/eureka-ui-typography/src/Heading.js","reportWebVitals.js","components/window-container/WindowContainer.js","components/svg/ChatTextBubbleRightTail.js","components/svg/ChatTextBubbleLeftTail.js","components/chat-window/ChatTextBubble.js","components/chat-window/ChatWindow.js","ChatModule.js","bootstrap.js","../node_modules/react-dom/client.js"],"sourcesContent":["var e=[],t=[];function n(n,r){if(n&&\"undefined\"!=typeof document){var a,s=!0===r.prepend?\"prepend\":\"append\",d=!0===r.singleTag,i=\"string\"==typeof r.container?document.querySelector(r.container):document.getElementsByTagName(\"head\")[0];if(d){var u=e.indexOf(i);-1===u&&(u=e.push(i)-1,t[u]={}),a=t[u]&&t[u][s]?t[u][s]:t[u][s]=c()}else a=c();65279===n.charCodeAt(0)&&(n=n.substring(1)),a.styleSheet?a.styleSheet.cssText+=n:a.appendChild(document.createTextNode(n))}function c(){var e=document.createElement(\"style\");if(e.setAttribute(\"type\",\"text/css\"),r.attributes)for(var t=Object.keys(r.attributes),n=0;n<t.length;n++)e.setAttribute(t[n],r.attributes[t[n]]);var a=\"prepend\"===s?\"afterbegin\":\"beforeend\";return i.insertAdjacentElement(a,e),e}}export{n as default};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\n// Styles\nimport './styles/heading.scss';\n\nclass Heading extends PureComponent {\n    static defaultProps = {\n        headingLvl: 2,\n    };\n\n    static propTypes = {\n        contextCls: PropTypes.string,\n        headingLvl: PropTypes.number,\n    };\n\n    render() {\n        const { children } = this.props;\n        const controlledHeadingLevel = this.getControlledHeadingLevel();\n\n        const Tag = `h${controlledHeadingLevel}`;\n\n        return (\n            <Tag {...this.getProps()} className={this.getContainerCls()}>\n                {children}\n            </Tag>\n        );\n    }\n\n    getControlledHeadingLevel = () => {\n        const { headingLvl } = this.props;\n        const isNumber = this.getIsHeadingLvlNum();\n        const isInRange = this.getIsHeadingLvlInRange();\n\n        return isNumber && isInRange ? headingLvl : 2;\n    };\n\n    getContainerCls() {\n        const { contextCls } = this.props;\n\n        return cx(this.baseCls, this.getModCls(), contextCls);\n    }\n\n    getModCls() {\n        const controlledHeadingLevel = this.getControlledHeadingLevel();\n\n        return {\n            [`${this.baseCls}--h1`]: controlledHeadingLevel === 1,\n            [`${this.baseCls}--h2`]: controlledHeadingLevel === 2,\n            [`${this.baseCls}--h3`]: controlledHeadingLevel === 3,\n            [`${this.baseCls}--h4`]: controlledHeadingLevel === 4,\n            [`${this.baseCls}--h5`]: controlledHeadingLevel === 5,\n            [`${this.baseCls}--h6`]: controlledHeadingLevel === 6,\n        };\n    }\n\n    getProps = () => {\n        const { contextCls, headingLvl, children, ...rest } = this.props;\n        const props = { ...rest };\n\n        return props;\n    };\n\n    getIsHeadingLvlNum() {\n        const { headingLvl } = this.props;\n\n        return Number.isInteger(headingLvl);\n    }\n\n    getIsHeadingLvlInRange() {\n        const { headingLvl } = this.props;\n\n        return headingLvl > 0 && headingLvl < 7;\n    }\n\n    baseCls = 'eureka-heading';\n}\n\nexport default Heading;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Tile } from '@Green-Dot-Corporation/eureka-ui-layouts';\nimport { EurekaMinus, EurekaX } from '@Green-Dot-Corporation/eureka-ui-icons';\nimport { Button } from '@Green-Dot-Corporation/eureka-ui-buttons';\n// Styles\nimport './styles/window-container.scss';\n\nclass WindowContainer extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        title: PropTypes.string,\n        shouldShowMinimizeBtn: PropTypes.bool,\n        shouldShowCloseBtn: PropTypes.bool,\n        onCloseBtnClick: PropTypes.func,\n        onMinimizeBtnClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        shouldShowMinimizeBtn: false,\n        shouldShowCloseBtn: false,\n        onCloseBtnClick: () => Promise.resolve(),\n        onMinimizeBtnClick: () => Promise.resolve(),\n    };\n\n    render() {\n        const { contextCls, children } = this.props;\n\n        return (\n            <Tile\n                renderHeading={this.renderHeading}\n                contextCls={cx(this.baseCls, contextCls)}\n            >\n                {children}\n            </Tile>\n        );\n    }\n\n    renderHeading = () => {\n        const { title, shouldShowMinimizeBtn, shouldShowCloseBtn } = this.props;\n\n        return (\n            <>\n                <div className={`${this.baseCls}__title`}>{title}</div>\n                {shouldShowMinimizeBtn && this.renderMinimizeBtn()}\n                {shouldShowCloseBtn && this.renderCloseBtn()}\n            </>\n        );\n    };\n\n    renderCloseBtn = () => {\n        const { onCloseBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--close-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__close-btn`)}\n                    renderIcon={this.renderCloseBtnIcon}\n                    onClick={onCloseBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Close Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtn = () => {\n        const { onMinimizeBtnClick } = this.props;\n\n        return (\n            <div\n                className={cx(\n                    this.baseTitleBtnContainerCls,\n                    `${this.baseTitleBtnContainerCls}--minimize-btn-container`,\n                )}\n            >\n                <Button\n                    contextCls={cx(`${this.baseCls}__minimize-btn`)}\n                    renderIcon={this.renderMinimizeBtnIcon}\n                    onClick={onMinimizeBtnClick}\n                    // TODO: replace the aria-label title when localization available\n                    aria-label=\"Minimize Button\"\n                />\n            </div>\n        );\n    };\n\n    renderMinimizeBtnIcon = () => <EurekaMinus />;\n\n    renderCloseBtnIcon = () => <EurekaX />;\n\n    baseCls = 'web-chat-window-container';\n\n    baseTitleBtnContainerCls = `${this.baseCls}__title-btn-container`;\n}\n\nexport default WindowContainer;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass ChatTextBubbleRightTail extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"12\"\n                    height=\"15\"\n                    viewBox=\"0 0 12 15\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M-0.000148773 0H5.99985C5.99985 4.82743 5.65399 12.7323 11.1514 15C4.94531 15 0.969548 12.3333 -0.000148773 11V0Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-bubble-right-tail';\n}\n\nexport default ChatTextBubbleRightTail;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nclass ChatTextBubbleLeftTail extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <span className={cx(this.baseCls, contextCls)}>\n                <svg\n                    width=\"11\"\n                    height=\"15\"\n                    viewBox=\"0 0 11 15\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M11 0H5C5 4.86555 5.60812 12.6867 0 15C6.20606 15 10.0303 12.3333 11 11V0Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            </span>\n        );\n    }\n\n    baseCls = 'web-chat-bubble-left-tail';\n}\n\nexport default ChatTextBubbleLeftTail;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ChatTextBubbleRightTail from '../svg/ChatTextBubbleRightTail';\nimport ChatTextBubbleLeftTail from '../svg/ChatTextBubbleLeftTail';\n// Styles\nimport './styles/chat-text-bubble.scss';\n\nclass ChatTextBubble extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        text: PropTypes.string,\n        isTextFromMe: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        isTextFromMe: true,\n    };\n\n    render() {\n        const { contextCls, text, children } = this.props;\n        const modCls = this.getModCls();\n\n        return (\n            <div className={cx(this.baseCls, modCls, contextCls)}>\n                <div className={`${this.baseCls}__bubble-container`}>\n                    {text ?? children}\n                    {this.renderTail()}\n                </div>\n            </div>\n        );\n    }\n\n    renderTail = () => {\n        const { isTextFromMe } = this.props;\n        const BubbleTail = isTextFromMe\n            ? ChatTextBubbleRightTail\n            : ChatTextBubbleLeftTail;\n\n        return <BubbleTail contextCls={`${this.baseCls}__tail`} />;\n    };\n\n    // Get Modifier Classes\n    getModCls = () => {\n        const { isTextFromMe } = this.props;\n\n        return {\n            [`${this.baseCls}--from-me`]: isTextFromMe,\n            [`${this.baseCls}--from-other`]: !isTextFromMe,\n            [`${this.baseCls}--tail-right`]: isTextFromMe,\n            [`${this.baseCls}--tail-left`]: !isTextFromMe,\n        };\n    };\n\n    // Base class which all component class names should be\n    // derived from\n    baseCls = 'web-chat-text-bubble';\n}\n\nexport default ChatTextBubble;\n","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport WindowContainer from '../window-container/WindowContainer';\nimport ChatTextBubble from './ChatTextBubble';\n// Styles\nimport './styles/chat-window.scss';\n\nclass ChatWindow extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n    };\n\n    render() {\n        const { contextCls } = this.props;\n\n        return (\n            <div className={cx(this.baseCls, contextCls)}>\n                <WindowContainer\n                    contextCls={cx(`${this.baseCls}__chat-window-container`)}\n                    // TODO: replace the hard code title when localization available\n                    title=\"Chat with an agent\"\n                    shouldShowCloseBtn\n                    shouldShowMinimizeBtn\n                    onCloseBtnClick={this.handleCloseBtnClick}\n                    onMinimizeBtnClick={this.handleMinimizeBtnClick}\n                >\n                    <div className={`${this.baseCls}__chat-text-container`}>\n                        <div className=\"messages-container\">\n                            {/* TODO: Replace the below to really chat text when API is ready */}\n                            <ChatTextBubble text=\"I’m having an issue with my direct deposit not showing up in my account. Can you help?\" />\n                            <ChatTextBubble\n                                text=\"Let me look that up for you. Hold one moment while I access your account.\"\n                                isTextFromMe={false}\n                            />\n                        </div>\n                        <div className=\"send-message-container\" />\n                    </div>\n                </WindowContainer>\n            </div>\n        );\n    }\n\n    handleCloseBtnClick = () => {\n        // TODO: will replace by real close conversation session when Gateway API is ready\n        console.log('close btn click');\n    };\n\n    handleMinimizeBtnClick = () => {\n        // TODO: will replace by minimize the window\n        console.log('min btn click');\n    };\n\n    baseCls = 'web-chat-window';\n}\n\nexport default ChatWindow;\n","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ChatWindow from './components/chat-window/ChatWindow';\n\nclass ChatModule extends PureComponent {\n    static propTypes = {\n        contextCls: PropTypes.string,\n        containerElement: PropTypes.object,\n    };\n\n    render() {\n        const { contextCls, containerElement } = this.props;\n\n        if (containerElement) {\n            containerElement.style.position = 'relative';\n        }\n\n        return <ChatWindow contextCls={cx(this.baseCls, contextCls)} />;\n    }\n\n    baseCls = 'web-chat-module';\n}\n\nexport default ChatModule;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport initMirageServer from '@Green-Dot-Corporation/eureka-lib-mock-utils/src/initMirageServer';\nimport { Heading } from '@Green-Dot-Corporation/eureka-ui-typography';\nimport reportWebVitals from './reportWebVitals';\nimport registerRoutes from './mock/registerRoutes';\nimport ChatModule from './ChatModule';\nimport './styles/index.scss';\n\nif (process.env.NODE_ENV === 'development') {\n    // Shutdown any existing instance of server to avoid multiple pretender\n    // instances error\n    if (window.server && typeof window.server.shutdown === 'function') {\n        window.server.shutdown();\n    }\n\n    // Create server and pass routes and other options\n    window.server = initMirageServer({\n        routes() {\n            registerRoutes(this);\n        },\n    });\n}\nconst rootHtmlElement = document.getElementById('root');\nconst root = ReactDOM.createRoot(rootHtmlElement);\nroot.render(\n    <React.StrictMode>\n        <>\n            <Heading HeadingLvl={2}>test</Heading>\n            <ChatModule containerElement={rootHtmlElement} />\n        </>\n    </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["e","t","n","r","document","a","s","prepend","d","singleTag","i","container","querySelector","getElementsByTagName","u","indexOf","push","c","charCodeAt","substring","styleSheet","cssText","appendChild","createTextNode","createElement","setAttribute","attributes","Object","keys","length","insertAdjacentElement","Heading","getControlledHeadingLevel","headingLvl","_this","props","isNumber","getIsHeadingLvlNum","isInRange","getIsHeadingLvlInRange","getProps","contextCls","children","rest","_objectWithoutPropertiesLoose","baseCls","render","this","controlledHeadingLevel","_jsx","_extends","className","getContainerCls","cx","getModCls","_ref","Number","isInteger","PureComponent","defaultProps","propTypes","PropTypes","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WindowContainer","renderHeading","title","shouldShowMinimizeBtn","shouldShowCloseBtn","renderMinimizeBtn","renderCloseBtn","onCloseBtnClick","baseTitleBtnContainerCls","Button","renderIcon","renderCloseBtnIcon","onClick","onMinimizeBtnClick","renderMinimizeBtnIcon","EurekaMinus","EurekaX","Tile","Promise","resolve","ChatTextBubbleRightTail","width","height","viewBox","fill","xmlns","ChatTextBubbleLeftTail","ChatTextBubble","renderTail","BubbleTail","isTextFromMe","text","modCls","ChatWindow","handleCloseBtnClick","console","log","handleMinimizeBtnClick","ChatModule","containerElement","style","position","rootHtmlElement","getElementById","ReactDOM","HeadingLvl","reportWebVitals","m","require","exports","createRoot","hydrateRoot"],"sourceRoot":""}